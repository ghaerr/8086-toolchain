# Sample ELKS Makefile for OpenWatcom C

############# Standard Section for Open Watcom C ##############
ifndef TOPDIR
$(error ELKS TOPDIR is not defined)
endif

ifndef WATCOM
$(error OpenWatcom WATCOM is not defined)
endif

CC = owcc
LD = owcc
CLBASE = -mcmodel=l
CLBASE += -bnone -march=i86 -stdc=c99
CLBASE += -fno-stack-check -fnostdlib
CLBASE += -Wc,-fpi87 -Wc,-zev -Wc,-zls -Wc,-x -Wc,-wcd=303
WARNINGS = -Wall -Wextra
INCLUDES = -I$(TOPDIR)/libc/include -I$(TOPDIR)/elks/include
INCLUDES += -I$(WATCOM)/h
DEFINES = -D__ELKS__
CFLAGS = -Os $(CLBASE) $(WARNINGS) $(INCLUDES) $(DEFINES) $(LOCALFLAGS)
LDBASE = -bos2 -s
LDBASE += -Wl,option -Wl,dosseg
LDBASE += -Wl,option -Wl,start=_start
LDBASE += -Wl,option -Wl,nodefaultlibs
LDBASE += -Wl,option -Wl,stack=0x1000
LDBASE += -Wl,option -Wl,heapsize=0x2000
LDFLAGS = $(LDBASE)
LDLIBS = -Wl,library -Wl,$(TOPDIR)/libc/libc.lib

OBJS = $(SRCS:.c=.obj)
%.obj: %.c
	$(CC) -c $(CFLAGS) -o $*.obj $<

############# End of Standard Section ##############

BINDIR = ../elks-bin
LOCALFLAGS =
SRCS = main.c cpp.c hash.c token1.c token2.c
PROG = $(BINDIR)/cpp86

all: $(PROG)

$(PROG): $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)

token1.o: token1.h
token2.o: token2.h

token1.h: token1.tok
	gperf -aptTc -N is_ctok -H hash1 token1.tok > tmp.h
	mv tmp.h token1.h

token2.h: token2.tok
	gperf -aptTc -k1,3 -N is_ckey -H hash2 token2.tok > tmp.h
	mv tmp.h token2.h

clean:
	rm -f $(PROG) *.obj tmp.h

maintclean: clean
	rm -f token1.h token2.h
